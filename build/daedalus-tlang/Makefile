# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=run
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
DEFINES +=
INCLUDES += -I../../example/include -I../../daedalus-core/src/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS)
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),run)
TARGETDIR = bin/run
TARGET = $(TARGETDIR)/Daedalus-Tlang.exe
OBJDIR = obj/run
LIBS += ../../daedalus-core/src/build/daedalus-core/bin/run/Daedalus-Core.lib
LDDEPS += ../../daedalus-core/src/build/daedalus-core/bin/run/Daedalus-Core.lib
ALL_LDFLAGS += $(LDFLAGS) -s
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)

else ifeq ($(config),static-build)
TARGETDIR = bin/static-build
TARGET = $(TARGETDIR)/Daedalus-Tlang.lib
OBJDIR = obj/static-build
LIBS += ../../daedalus-core/src/build/daedalus-core/bin/static-build/Daedalus-Core.lib
LDDEPS += ../../daedalus-core/src/build/daedalus-core/bin/static-build/Daedalus-Core.lib
ALL_LDFLAGS += $(LDFLAGS) -s
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)

else ifeq ($(config),dynamic-build)
TARGETDIR = bin/dynamic-build
TARGET = $(TARGETDIR)/Daedalus-Tlang.dll
OBJDIR = obj/dynamic-build
LIBS += ../../daedalus-core/src/build/daedalus-core/bin/dynamic-build/Daedalus-Core.lib
LDDEPS += ../../daedalus-core/src/build/daedalus-core/bin/dynamic-build/Daedalus-Core.lib
ALL_LDFLAGS += $(LDFLAGS) -shared -Wl,--out-implib="bin/dynamic-build/Daedalus-Tlang.lib" -s
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/ast.o
GENERATED += $(OBJDIR)/env.o
GENERATED += $(OBJDIR)/interpreter.o
GENERATED += $(OBJDIR)/lexer.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/parser.o
GENERATED += $(OBJDIR)/values.o
OBJECTS += $(OBJDIR)/ast.o
OBJECTS += $(OBJDIR)/env.o
OBJECTS += $(OBJDIR)/interpreter.o
OBJECTS += $(OBJDIR)/lexer.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/parser.o
OBJECTS += $(OBJDIR)/values.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Daedalus-Tlang
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Daedalus-Tlang
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/env.o: ../../example/Tlang/interpreter/env.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/interpreter.o: ../../example/Tlang/interpreter/interpreter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/values.o: ../../example/Tlang/interpreter/values.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/lexer.o: ../../example/Tlang/lexer/lexer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ast.o: ../../example/Tlang/parser/ast.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/parser.o: ../../example/Tlang/parser/parser.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: ../../example/main.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif